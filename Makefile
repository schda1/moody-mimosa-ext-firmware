##########################################################################################################################
# File automatically-generated by tool: [projectgenerator] version: [4.2.0-B44] date: [Sun Dec 29 20:26:18 CET 2024] 
##########################################################################################################################

# ------------------------------------------------
# Generic Makefile (based on gcc)
#
# ChangeLog :
#	2017-02-10 - Several enhancements + project update mode
#   2015-07-22 - first version
# ------------------------------------------------

DRIVERS = drivers/stm32g4xx/Drivers/STM32G4xx_HAL_Driver
CMSIS = drivers/stm32g4xx/Drivers/CMSIS
CONFIG = app/Config_G4
MCU_FAMILY = STM32G4xx
MCU_FAMILY_LC = stm32g4xx
MCU_TYPE = STM32G474xx
MCU_TYPE_LC = stm32g474xx
STARTUP = startup_stm32g474xx.s
LDSCRIPT = STM32G474RETx_FLASH.ld

######################################
# target
######################################
TARGET = mimosa_logger


######################################
# building variables
######################################
# debug build?
DEBUG = 0
# optimization
OPT = -O2


#######################################
# paths
#######################################
# Build path
BUILD_DIR = build

######################################
# source
######################################
# C sources
C_SOURCES =  \
App/printf_util.c \
App/main.c \
$(CONFIG)/$(MCU_FAMILY_LC)_it.c \
$(CONFIG)/$(MCU_FAMILY_LC)_hal_msp.c \
$(CONFIG)/system_$(MCU_FAMILY_LC).c \
$(DRIVERS)/Src/$(MCU_FAMILY_LC)_hal_tim.c \
$(DRIVERS)/Src/$(MCU_FAMILY_LC)_hal_tim_ex.c \
$(DRIVERS)/Src/$(MCU_FAMILY_LC)_hal_pwr_ex.c \
$(DRIVERS)/Src/$(MCU_FAMILY_LC)_hal_uart.c \
$(DRIVERS)/Src/$(MCU_FAMILY_LC)_hal_uart_ex.c \
$(DRIVERS)/Src/$(MCU_FAMILY_LC)_hal.c \
$(DRIVERS)/Src/$(MCU_FAMILY_LC)_hal_rcc.c \
$(DRIVERS)/Src/$(MCU_FAMILY_LC)_hal_rcc_ex.c \
$(DRIVERS)/Src/$(MCU_FAMILY_LC)_hal_flash.c \
$(DRIVERS)/Src/$(MCU_FAMILY_LC)_hal_flash_ex.c \
$(DRIVERS)/Src/$(MCU_FAMILY_LC)_hal_flash_ramfunc.c \
$(DRIVERS)/Src/$(MCU_FAMILY_LC)_hal_gpio.c \
$(DRIVERS)/Src/$(MCU_FAMILY_LC)_hal_exti.c \
$(DRIVERS)/Src/$(MCU_FAMILY_LC)_hal_dma.c \
$(DRIVERS)/Src/$(MCU_FAMILY_LC)_hal_dma_ex.c \
$(DRIVERS)/Src/$(MCU_FAMILY_LC)_hal_pwr.c \
$(DRIVERS)/Src/$(MCU_FAMILY_LC)_hal_cortex.c \
$(DRIVERS)/Src/$(MCU_FAMILY_LC)_hal_spi.c \
$(DRIVERS)/Src/$(MCU_FAMILY_LC)_hal_i2c.c \
$(DRIVERS)/Src/$(MCU_FAMILY_LC)_hal_i2c_ex.c

CPP_SOURCES =  \
App/App.cpp \
App/PersistantStorage/PersistantStorage.cpp \
App/PersistantStorage/FramStorage_Spi.cpp \
App/HalWrapper/DigitalOutput.cpp \
App/HalWrapper/DigitalInput.cpp \
App/HalWrapper/Spi.cpp \
App/PinObserver.cpp \
App/HalWrapper/Timer.cpp \
App/HalWrapper/TimerInterruptHandler.cpp \
App/PwmHandler.cpp \
App/HalWrapper/Uart.cpp \
App/HalWrapper/UartInterruptHandler.cpp \
App/MessageParser.cpp \
App/MimosaDriver.cpp \
App/Parameter/ParameterHandler.cpp \
App/PersistantStorage/FlashStorage.cpp \
App/ComparatorDriver.cpp \
App/HalWrapper/ExtiInput.cpp \
App/HalWrapper/ExtiInterruptHandler.cpp \
App/HalWrapper/I2C.cpp \
App/Display/Lcd_I2C.cpp \
App/MimosaSpeechDisplay.cpp \
App/HalWrapper/PwmOutput.cpp

# ASM sources
ASM_SOURCES =  \
$(STARTUP)

# ASM sources
ASMM_SOURCES = 


#######################################
# binaries
#######################################
PREFIX = arm-none-eabi-
# The gcc compiler bin path can be either defined in make command via GCC_PATH variable (> make GCC_PATH=xxx)
# either it can be added to the PATH environment variable.
ifdef GCC_PATH
CPP = $(GCC_PATH)/$(PREFIX)g++
CC = $(GCC_PATH)/$(PREFIX)gcc
AS = $(GCC_PATH)/$(PREFIX)gcc -x assembler-with-cpp
CP = $(GCC_PATH)/$(PREFIX)objcopy
SZ = $(GCC_PATH)/$(PREFIX)size
else
CPP = $(PREFIX)g++
CC = $(PREFIX)gcc
AS = $(PREFIX)gcc -x assembler-with-cpp
CP = $(PREFIX)objcopy
SZ = $(PREFIX)size
endif
HEX = $(CP) -O ihex
BIN = $(CP) -O binary -S
 
#######################################
# CFLAGS
#######################################
# cpu
CPU = -mcpu=cortex-m4

# fpu
FPU = -mfpu=fpv4-sp-d16

# float-abi
FLOAT-ABI = -mfloat-abi=hard

# mcu
MCU = $(CPU) -mthumb $(FPU) $(FLOAT-ABI)

# macros for gcc
# AS defines
AS_DEFS = 

# C defines
C_DEFS =  \
-DUSE_HAL_DRIVER \
-D$(MCU_TYPE)

# AS includes
AS_INCLUDES = 

# C includes
C_INCLUDES =  \
-IApp \
-I$(CONFIG) \
-I$(DRIVERS)/Inc \
-I$(DRIVERS)/Inc/Legacy \
-I$(CMSIS)/Include \
-I$(CMSIS)/Device/ST/$(MCU_FAMILY)/Include

# compile gcc flags
ASFLAGS = $(MCU) $(AS_DEFS) $(AS_INCLUDES) $(OPT) -Wall -fdata-sections -ffunction-sections

CFLAGS += $(MCU) $(C_DEFS) $(C_INCLUDES) $(OPT) -Wall -fdata-sections -ffunction-sections

ifeq ($(DEBUG), 1)
CFLAGS += -g -gdwarf-2
endif

# Generate dependency information
CFLAGS += -MMD -MP -MF"$(@:%.o=%.d)"

#######################################
# LDFLAGS
#######################################
# link script


# libraries
LIBS = -lc -lm -lnosys 
LIBDIR = 
LDFLAGS = $(MCU) -specs=nano.specs -T$(LDSCRIPT) $(LIBDIR) $(LIBS) -Wl,-Map=$(BUILD_DIR)/$(TARGET).map,--cref -Wl,--gc-sections

# default action: build all
all: $(BUILD_DIR)/$(TARGET).elf $(BUILD_DIR)/$(TARGET).hex $(BUILD_DIR)/$(TARGET).bin


#######################################
# build the application
#######################################
# list of objects
OBJECTS = $(addprefix $(BUILD_DIR)/,$(notdir $(C_SOURCES:.c=.o)))
vpath %.c $(sort $(dir $(C_SOURCES)))
OBJECTS += $(addprefix $(BUILD_DIR)/,$(notdir $(CPP_SOURCES:.cpp=.o)))
vpath %.cpp $(sort $(dir $(CPP_SOURCES)))
# list of ASM program objects
OBJECTS += $(addprefix $(BUILD_DIR)/,$(notdir $(ASM_SOURCES:.s=.o)))
vpath %.s $(sort $(dir $(ASM_SOURCES)))
OBJECTS += $(addprefix $(BUILD_DIR)/,$(notdir $(ASMM_SOURCES:.S=.o)))
vpath %.S $(sort $(dir $(ASMM_SOURCES)))

$(BUILD_DIR)/%.o: %.c Makefile | $(BUILD_DIR) 
	$(CC) -c $(CFLAGS) -Wa,-a,-ad,-alms=$(BUILD_DIR)/$(notdir $(<:.c=.lst)) $< -o $@
$(BUILD_DIR)/%.o: %.cpp Makefile | $(BUILD_DIR)
	$(CPP) -c $(CFLAGS) -std=c++11 -Wa,-a,-ad,-alms=$(BUILD_DIR)/$(notdir $(<:.cpp=.lst)) $< -o $@

$(BUILD_DIR)/%.o: %.s Makefile | $(BUILD_DIR)
	$(AS) -c $(CFLAGS) $< -o $@
$(BUILD_DIR)/%.o: %.S Makefile | $(BUILD_DIR)
	$(AS) -c $(CFLAGS) $< -o $@

$(BUILD_DIR)/$(TARGET).elf: $(OBJECTS) Makefile
	$(CPP) $(OBJECTS) $(LDFLAGS) -o $@
	$(SZ) $@


$(BUILD_DIR)/%.hex: $(BUILD_DIR)/%.elf | $(BUILD_DIR)
	$(HEX) $< $@
	
$(BUILD_DIR)/%.bin: $(BUILD_DIR)/%.elf | $(BUILD_DIR)
	$(BIN) $< $@	
	
$(BUILD_DIR):
	mkdir $@		

#######################################
# clean up
#######################################
clean:
	-rm -fR $(BUILD_DIR)
  
#######################################
# dependencies
#######################################
-include $(wildcard $(BUILD_DIR)/*.d)

# *** EOF ***
